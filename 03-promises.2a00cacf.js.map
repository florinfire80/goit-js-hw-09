{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_await_value.js","node_modules/@swc/helpers/lib/_async_generator.js","node_modules/@swc/helpers/lib/_async_iterator.js","node_modules/@swc/helpers/lib/_async_to_generator.js","node_modules/@swc/helpers/lib/_await_async_generator.js","node_modules/@swc/helpers/lib/_wrap_async_generator.js","node_modules/regenerator-runtime/runtime.js","src/js/03-promises.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _AwaitValue;\nfunction _AwaitValue(value) {\n    this.wrapped = value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = AsyncGenerator;\nvar _awaitValue = _interopRequireDefault(require(\"./_await_value\"));\nfunction AsyncGenerator(gen) {\n    var front, back;\n    function send(key, arg) {\n        return new Promise(function(resolve, reject) {\n            var request = {\n                key: key,\n                arg: arg,\n                resolve: resolve,\n                reject: reject,\n                next: null\n            };\n            if (back) {\n                back = back.next = request;\n            } else {\n                front = back = request;\n                resume(key, arg);\n            }\n        });\n    }\n    function resume(key, arg1) {\n        try {\n            var result = gen[key](arg1);\n            var value = result.value;\n            var wrappedAwait = value instanceof _awaitValue.default;\n            Promise.resolve(wrappedAwait ? value.wrapped : value).then(function(arg) {\n                if (wrappedAwait) {\n                    resume(\"next\", arg);\n                    return;\n                }\n                settle(result.done ? \"return\" : \"normal\", arg);\n            }, function(err) {\n                resume(\"throw\", err);\n            });\n        } catch (err) {\n            settle(\"throw\", err);\n        }\n    }\n    function settle(type, value) {\n        switch(type){\n            case \"return\":\n                front.resolve({\n                    value: value,\n                    done: true\n                });\n                break;\n            case \"throw\":\n                front.reject(value);\n                break;\n            default:\n                front.resolve({\n                    value: value,\n                    done: false\n                });\n                break;\n        }\n        front = front.next;\n        if (front) {\n            resume(front.key, front.arg);\n        } else {\n            back = null;\n        }\n    }\n    this._invoke = send;\n    if (typeof gen.return !== \"function\") {\n        this.return = undefined;\n    }\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nif (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function() {\n        return this;\n    };\n}\nAsyncGenerator.prototype.next = function(arg) {\n    return this._invoke(\"next\", arg);\n};\nAsyncGenerator.prototype.throw = function(arg) {\n    return this._invoke(\"throw\", arg);\n};\nAsyncGenerator.prototype.return = function(arg) {\n    return this._invoke(\"return\", arg);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _asyncIterator;\nfunction _asyncIterator(iterable) {\n    var method;\n    if (typeof Symbol === \"function\") {\n        if (Symbol.asyncIterator) {\n            method = iterable[Symbol.asyncIterator];\n            if (method != null) return method.call(iterable);\n        }\n        if (Symbol.iterator) {\n            method = iterable[Symbol.iterator];\n            if (method != null) return method.call(iterable);\n        }\n    }\n    throw new TypeError(\"Object is not async iterable\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _asyncToGenerator;\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _awaitAsyncGenerator;\nvar _awaitValue = _interopRequireDefault(require(\"./_await_value\"));\nfunction _awaitAsyncGenerator(value) {\n    return new _awaitValue.default(value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _wrapAsyncGenerator;\nvar _asyncGenerator = _interopRequireDefault(require(\"./_async_generator\"));\nfunction _wrapAsyncGenerator(fn) {\n    return function() {\n        return new _asyncGenerator.default(fn.apply(this, arguments));\n    };\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// Așteaptă ca documentul HTML să fie complet încărcat înainte de a executa codul\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Selectează formularul cu id-ul 'promiseForm' și îl stochează în variabila 'promiseForm'\n  const promiseForm = document.getElementById('promiseForm');\n\n  // Definește o funcție numită 'createPromise' care primește 'position' și 'delay'\n  function createPromise(position, delay) {\n    // Returnează o promisiune care se va rezolva sau respinge după un anumit timp 'delay'\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        // Generează un număr aleator între 0 și 1\n        const randomNumber = Math.random();\n        const result = { position, delay };\n\n        // Verifică dacă numărul generat este mai mic de 0.7 (70% probabilitate)\n        if (randomNumber < 0.7) {\n          // Dacă da, marchează promisiunea ca rezolvată și trimite rezultatul\n          result.status = 'resolved';\n          resolve(result);\n        } else {\n          // Dacă nu, marchează promisiunea ca respinsă și trimite rezultatul\n          result.status = 'rejected';\n          reject(result);\n        }\n      }, delay);\n    });\n  }\n\n  // Definește un generator de promisiuni numit 'promiseGenerator'\n  async function* promiseGenerator(amount, firstDelay, step) {\n    for (let i = 1; i <= amount; i++) {\n      const delay = firstDelay + (i - 1) * step;\n      try {\n        // Așteaptă rezolvarea sau respingerea unei promisiuni create cu 'createPromise'\n        const result = await createPromise(i, delay);\n        // Returnează rezultatul pentru generator\n        yield result;\n      } catch (error) {\n        // Dacă promisiunea este respinsă, returnează eroarea pentru generator\n        yield error;\n      }\n    }\n  }\n\n  // Adaugă un ascultător de eveniment pentru trimiterea formularului\n  promiseForm.addEventListener('submit', async function (e) {\n    e.preventDefault(); // Oprirea comportamentului implicit al formularului (trimiterea)\n\n    // Creează o listă neordonată pentru afișarea rezultatelor\n    const resultsList = document.createElement('ul');\n    // Setează id-ul listei ca 'results'\n    resultsList.id = 'results';\n    // Adaugă lista la interiorul formularului\n    promiseForm.appendChild(resultsList);\n\n    // Obține datele din formular folosind FormData\n    const formData = new FormData(promiseForm);\n    const amount = parseInt(formData.get('amount'));\n    const firstDelay = parseInt(formData.get('delay'));\n    const step = parseInt(formData.get('step'));\n\n    // Creează un generator de promisiuni pe baza datelor din formular\n    const generator = promiseGenerator(amount, firstDelay, step);\n\n    // Parcurge generatorul și afișează rezultatele\n    for await (const result of generator) {\n      const li = document.createElement('li');\n      if (result.status === 'resolved') {\n        // Dacă promisiunea este rezolvată, afișează mesajul cu verde\n        li.textContent = `Promise ${result.position} resolved after ${result.delay} ms`;\n        li.style.color = 'green';\n      } else {\n        // Dacă promisiunea este respinsă, afișează mesajul cu roșu\n        li.textContent = `Promise ${result.position} rejected after ${result.delay} ms`;\n        li.style.color = 'red';\n      }\n      // Adaugă elementul <li> la lista de rezultate\n      resultsList.appendChild(li);\n    }\n  });\n});\n"],"names":["Object","defineProperty","module","exports","value","default","this","wrapped","$fd1a276f2212b7d7$var$AsyncGenerator","obj","$fd1a276f2212b7d7$var$_awaitValue","parcelRequire","__esModule","gen","front","back","resume","key","arg1","result","wrappedAwait","Promise","resolve","then","arg","settle","done","err","type","reject","next","_invoke","request","return","undefined","Symbol","asyncIterator","prototype","throw","$21ded3b07246848d$exports","iterable","method","call","iterator","TypeError","$84ebd01c1ddf4bef$var$asyncGeneratorStep","_next","_throw","info","error","$84ebd01c1ddf4bef$exports","fn","self","args","arguments","apply","$7773e476184d4208$exports","$7773e476184d4208$var$_awaitValue","$ce39e292b93ed71c$exports","$ce39e292b93ed71c$var$_asyncGenerator","$ce39e292b93ed71c$var$_interopRequireDefault","$21b983287c82ebd3$var$runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err1","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","value1","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iteratorMethod","isNaN","length","i","next1","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","key1","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","$21b983287c82ebd3$exports","regeneratorRuntime","accidentalStrictMode","globalThis","Function","document","addEventListener","promiseForm","getElementById","createPromise","position","delay","setTimeout","randomNumber","Math","random","status","promiseGenerator","amount","firstDelay","step","_promiseGenerator","$parcel$interopDefault","_callee","_ctx","e","resultsList","formData","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","li","preventDefault","createElement","id","appendChild","FormData","parseInt","get","textContent","concat","style","color"],"version":3,"file":"03-promises.2a00cacf.js.map"}